/***************************************************************************************************
compress.h
 	Copyright (c) Datatom Co., Ltd.(2012 - 2015), All rights reserved.

Purpose:
	this is a class of Snappy compression  
	
Auther:
	hanxin (han.xin@datatom.com)
	
Created Time:
	2013-2-2
***************************************************************************************************/
#ifndef __DTL_COMPRESS_HEAD_H__
#define __DTL_COMPRESS_HEAD_H__

#if PRAGMA_ONCE
#	pragma once
#endif

#include <snappy.h>

class SnappyCompress
{
public:

	/**
	 * 压缩数据块 （High-Level, 满足大部分用户需求）
	 *
	 * @param	sourcePathName 压缩的文件名.
	 * @param	destPathName 压缩后的文件名.
	 *
	 * @return  返回压缩后的数据块长度
	**/
	static size_t Compress(const char* input, size_t len, string *output);
	
	/**
	 * 解压 （high-level）
	 *
	 * @param	sourcePathName 压缩的文件名.
	 * @param	destPathName 压缩后的文件名.
	 *
	 * @return  returns false if the message is corrupted and could not be decompressed
	**/	
	static bool UnCompress(const char* compressed, size_t compressed_length,
								string* uncompressed);
								
								
	// ------------------------------------------------------------------------
	// Lower-level character array based routines.  May be useful for
	// efficiency reasons in certain circumstances.
	// ------------------------------------------------------------------------

	// REQUIRES: "compressed" must point to an area of memory that is at
	// least "MaxCompressedLength(input_length)" bytes in length.
	//
	// Takes the data stored in "input[0..input_length]" and stores
	// it in the array pointed to by "compressed".
	//
	// "*compressed_length" is set to the length of the compressed output.
	//
	// Example:
	//    char* output = new char[SnappyCompress::MaxCompressedLength(input_length)];
	//    size_t output_length;
	//    SnappyCompress::RawCompress(input, input_length, output, &output_length);
	//    ... Process(output, output_length) ...
	//    delete [] output;
	static void RawCompress(const char* input,
						   size_t input_length,
						   char* compressed,
						   size_t* compressed_length);

	// Given data in "compressed[0..compressed_length-1]" generated by
	// calling the SnappyCompress::Compress routine, this routine
	// stores the uncompressed data to
	//    uncompressed[0..GetUnCompressedLength(compressed)-1]
	// returns false if the message is corrupted and could not be decrypted
	static bool RawUnCompress(const char* compressed, size_t compressed_length,
								char* uncompressed);								
	
public:

	/**
	* 返回最大的压缩大小
	* @param  压缩源数据块的大小
	*/
	static size_t MaxCompressedLength(size_t source_bytes);
	
	/**
	* @param compressed  		 compressed buffer produced by RawCompress() or Compress()
	* @param compressed_length   compressed buffer length
	* @return  Returnsthe length of the uncompressed data inresult normally
			   if return = 0, error ocurred
	*/
	size_t GetUnCompressedLength(const char* compressed, size_t compressed_length);	
};
	
#endif //__DTL_COMPRESS_HEAD_H__










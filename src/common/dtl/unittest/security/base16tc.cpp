/***************************************************************************************************base16tc.cpp:		C++ Foundation Library TestCase cpp files	Copyright (c) Datatom Software, Inc.(2011)Purpose:	base16 测试Author:	yan.zhineng@datatom.comCreating Time:	2012-3-20***************************************************************************************************/#include <dtprec.h>#include <cppunit/tester.h>#include <dtl/dtl.h>#include "base16tc.h"CPPUNIT_TEST_SUITE_REGISTRATION( Base16TestCase );voidBase16TestCase::encode (void){	tchar_t ptr[11] = "abcde";	tchar_t ptr1[23] = {0};	bool capital = true;	CPPUNIT_ASSERT ( Base16::encode ( ptr, 11, ptr1, capital ) == true );	size_t a[10] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };	tchar_t ptr2[21];	CPPUNIT_ASSERT ( Base16::encode ( a, 10, ptr2, capital ) == true );	String str ("1v23b1te56r");	tchar_t ptr3[30];	CPPUNIT_ASSERT ( Base16::encode ( &str, 12, ptr3, capital ) == true );	std::string str1 ("45641regtre");	tchar_t ptr4[24];	CPPUNIT_ASSERT ( Base16::encode ( &str1, 12, ptr4, capital ) == true );	std::string str2[] = "你好";	tchar_t ptr5[14];	CPPUNIT_ASSERT ( Base16::encode ( &str2, 7, ptr5, capital ) == true );	String str3[] = "\0";	tchar_t ptr6[10];	CPPUNIT_ASSERT ( Base16::encode ( str3, 0, ptr6, capital ) == true );	String s;	tchar_t ptr7[2];	CPPUNIT_ASSERT( Base16::encode ( &s, 0, ptr7, capital ) == true );	capital = false;	String s1[] = "4564158";	CPPUNIT_ASSERT_NO_THROW ( Base16::encode ( s1, 8, capital ) );	String s2[] = "\0";	CPPUNIT_ASSERT_NO_THROW ( Base16::encode ( s2, 0, capital ) );	std::string s3[] = "r4hr65n";	CPPUNIT_ASSERT_NO_THROW ( Base16::encode ( s3, 8, capital ) );	tchar_t s4[10] = "j4y5t64j6";	CPPUNIT_ASSERT_NO_THROW ( Base16::encode ( s4, 8, capital ) );		size_t a1[5] = { 0, 1, 2, 3, 4 };	CPPUNIT_ASSERT_NO_THROW ( Base16::encode ( a1, 8, capital ) );	std::string s6[] = "你好";	CPPUNIT_ASSERT_NO_THROW ( Base16::encode ( s6, 8, capital ) );}voidBase16TestCase::decode (void){	char ptr[] = "6162636465000000000000";	tchar_t str[30] = {0};	CPPUNIT_ASSERT ( Base16::decode ( ptr, 14, str ) == true );	CPPUNIT_ASSERT ( String ( str ) == String ("abcde") );}
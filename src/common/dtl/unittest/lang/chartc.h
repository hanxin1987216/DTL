// Unit Test code for class cpp::lang::Int#ifndef __CHARTC_H__#define __CHARTC_H__#include <cppunit/tester.h>class CharTestCase : public CPPUNIT_NS::TestFixture{	CPPUNIT_TEST_SUITE (CharTestCase);		CPPUNIT_TEST_DESCRIPTION (isWhiteSpace,_T("测试Char, isWhiteSpace 判断字符是否是空白键"));			CPPUNIT_TEST_DESCRIPTION (isDigit,_T("测试Char,isDigit 判断字符是否是数字"));		CPPUNIT_TEST_DESCRIPTION (isLetter,_T("测试Char,isLetter 判断字符是否是字母"));		CPPUNIT_TEST_DESCRIPTION (isLower,_T("测试Char,isLower 判断字符是否是小写"));		CPPUNIT_TEST_DESCRIPTION (isUpper,_T("测试Char,isUpper 判断字符是否是大写"));		CPPUNIT_TEST_DESCRIPTION (isNumber,_T("测试Char,isNumber 判断字符是否是数字"));		CPPUNIT_TEST_DESCRIPTION (isPunctuation,_T("测试Char,isPunctuation 判断字符是否是标点符号"));		CPPUNIT_TEST_DESCRIPTION (isSeperator,_T("测试Char,isSeperator 判断字符是否是分隔符"));		CPPUNIT_TEST_DESCRIPTION (isSymbol,_T("测试Char,isSymbol 判断字符是否是货币符号"));			CPPUNIT_TEST_SUITE_END ();	public:	void setUp (void)	{	}		void tearDown (void)	{	}	protected:	void isWhiteSpace (void);	void isDigit (void);	void isLetter (void);	void isLower (void);	void isUpper (void);	void isNumber (void);	void isPunctuation (void);	void isSeperator (void);	void isSymbol (void);}; // End class IntTestCase#endif // __INTTC_H__